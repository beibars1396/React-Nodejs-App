{"ast":null,"code":"import authAxios from \"../shared/axios/authAxios\";\nimport { AuthToken } from \"./authToken\";\n// import { tenantSubdomain } from \"modules/tenant/tenantSubdomain\";\n// import AuthCurrentTenant from \"./authCurrentTenant\";\n// import Errors from '../shared/error/errors';\n// import config from '../../config';\n\nexport default class AuthService {\n  static async fetchMe() {\n    const response = await authAxios.get('/auth/me');\n    return response.data;\n  }\n  static async changePassword(oldPassword, newPassword) {\n    const body = {\n      oldPassword,\n      newPassword\n    };\n    const response = await authAxios.put('/auth/change-password', body);\n    return response.data;\n  }\n  static async updateProfile(data) {\n    const body = {\n      data\n    };\n    const response = await authAxios.put('auth/profile', body);\n    return response.data;\n  }\n  static signout() {\n    AuthToken.set(null, true);\n  }\n  static async registerWithEmailAndPassword(email, password) {\n    // const invitationToken = AuthInvitationToken.get();\n\n    const response = await authAxios.post('/auth/sign-up', {\n      email,\n      password\n      //   invitationToken,\n      // tenantId: tenantSubdomain.isSubdomain\n      // ? AuthCurrentTenant.get()\n      // : undefined,\n      //    tenantId: undefined \n    });\n\n    // AuthInvitationToken.clear();\n\n    return response.data;\n  }\n  static async signinWithEmailAndPassword(email, password) {\n    const response = await authAxios.post('/auth/sign-in', {\n      email,\n      password\n    });\n    return response.data;\n  }\n}","map":{"version":3,"names":["authAxios","AuthToken","AuthService","fetchMe","response","get","data","changePassword","oldPassword","newPassword","body","put","updateProfile","signout","set","registerWithEmailAndPassword","email","password","post","signinWithEmailAndPassword"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/auth/authService.tsx"],"sourcesContent":["import authAxios from \"../shared/axios/authAxios\";\nimport { AuthToken } from \"./authToken\";\n// import { tenantSubdomain } from \"modules/tenant/tenantSubdomain\";\n// import AuthCurrentTenant from \"./authCurrentTenant\";\n// import Errors from '../shared/error/errors';\n// import config from '../../config';\n\nexport default class AuthService {\n    static async fetchMe() {\n        const response = await authAxios.get('/auth/me');\n        return response.data;       \n    }\n\n    static async changePassword(oldPassword: any, newPassword: any) {\n        const body = {\n            oldPassword,\n            newPassword\n        };\n\n        const response = await authAxios.put(\n            '/auth/change-password',\n            body\n        );\n\n        return response.data;\n    }\n\n    static async updateProfile(data: any) {\n        const body = {\n            data\n        }\n\n        const response = await authAxios.put(\n            'auth/profile',\n            body\n        )\n\n        return response.data\n    }\n\n    static signout(){\n        AuthToken.set(null, true);\n    }\n\n    static async registerWithEmailAndPassword(\n        email: any,\n        password: any,\n    ) {\n        // const invitationToken = AuthInvitationToken.get();\n        \n        const response = await authAxios.post('/auth/sign-up', {\n            email,\n            password,\n        //   invitationToken,\n            // tenantId: tenantSubdomain.isSubdomain\n                // ? AuthCurrentTenant.get()\n                // : undefined,\n        //    tenantId: undefined \n        });\n    \n        // AuthInvitationToken.clear();\n    \n        return response.data;\n    }\n\n    static async signinWithEmailAndPassword(\n        email: any, password: any\n    ) {\n        \n        const response = await authAxios.post('/auth/sign-in', {\n            email,\n            password,\n        });\n\n        return response.data;\n    }\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,SAASC,SAAS,QAAQ,aAAa;AACvC;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,WAAW,CAAC;EAC7B,aAAaC,OAAOA,CAAA,EAAG;IACnB,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;IAChD,OAAOD,QAAQ,CAACE,IAAI;EACxB;EAEA,aAAaC,cAAcA,CAACC,WAAgB,EAAEC,WAAgB,EAAE;IAC5D,MAAMC,IAAI,GAAG;MACTF,WAAW;MACXC;IACJ,CAAC;IAED,MAAML,QAAQ,GAAG,MAAMJ,SAAS,CAACW,GAAG,CAChC,uBAAuB,EACvBD,IACJ,CAAC;IAED,OAAON,QAAQ,CAACE,IAAI;EACxB;EAEA,aAAaM,aAAaA,CAACN,IAAS,EAAE;IAClC,MAAMI,IAAI,GAAG;MACTJ;IACJ,CAAC;IAED,MAAMF,QAAQ,GAAG,MAAMJ,SAAS,CAACW,GAAG,CAChC,cAAc,EACdD,IACJ,CAAC;IAED,OAAON,QAAQ,CAACE,IAAI;EACxB;EAEA,OAAOO,OAAOA,CAAA,EAAE;IACZZ,SAAS,CAACa,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;EAC7B;EAEA,aAAaC,4BAA4BA,CACrCC,KAAU,EACVC,QAAa,EACf;IACE;;IAEA,MAAMb,QAAQ,GAAG,MAAMJ,SAAS,CAACkB,IAAI,CAAC,eAAe,EAAE;MACnDF,KAAK;MACLC;MACJ;MACI;MACI;MACA;MACR;IACA,CAAC,CAAC;;IAEF;;IAEA,OAAOb,QAAQ,CAACE,IAAI;EACxB;EAEA,aAAaa,0BAA0BA,CACnCH,KAAU,EAAEC,QAAa,EAC3B;IAEE,MAAMb,QAAQ,GAAG,MAAMJ,SAAS,CAACkB,IAAI,CAAC,eAAe,EAAE;MACnDF,KAAK;MACLC;IACJ,CAAC,CAAC;IAEF,OAAOb,QAAQ,CAACE,IAAI;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}