{"ast":null,"code":"export default class PermissionChecker {\n  constructor(currentUser) {\n    this.currentUser = void 0;\n    this.currentUser = currentUser;\n  }\n  get currentUserRolesIds() {\n    if (!this.currentUser) {\n      return [];\n    }\n    return this.currentUser.roles;\n  }\n  match(permission) {\n    if (!permission) {\n      return true;\n    }\n    return this.rolesMatchOneOf(permission.allowedRoles);\n  }\n  rolesMatchOneOf(arg) {\n    if (!this.currentUserRolesIds) {\n      return false;\n    }\n    if (!arg) {\n      return false;\n    }\n    if (Array.isArray(arg)) {\n      if (!arg.length) {\n        return false;\n      }\n      return arg.some(role => this.currentUserRolesIds.includes(role));\n    }\n    return this.currentUserRolesIds.includes(arg);\n  }\n  get isAuthenticated() {\n    return Boolean(this.currentUser) && Boolean(this.currentUser.id);\n  }\n}","map":{"version":3,"names":["PermissionChecker","constructor","currentUser","currentUserRolesIds","roles","match","permission","rolesMatchOneOf","allowedRoles","arg","Array","isArray","length","some","role","includes","isAuthenticated","Boolean","id"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/auth/permissionChecker.tsx"],"sourcesContent":["export default class PermissionChecker {\n    currentUser;\n\n    constructor(currentUser) {\n        this.currentUser = currentUser;\n    }\n\n    get currentUserRolesIds() {\n        if (!this.currentUser) {\n            return [];\n        }\n\n        \n        return this.currentUser.roles;\n    }\n\n    match(permission) {\n        if (!permission) {\n            return true;\n        }\n        \n        return this.rolesMatchOneOf(permission.allowedRoles);\n    }\n\n    rolesMatchOneOf(arg) {\n        if (!this.currentUserRolesIds) {\n            return false;\n        }\n\n        if (!arg) {\n            return false;\n        }\n\n        if (Array.isArray(arg)) {\n            if (!arg.length) {\n                return false;\n            }\n\n            return arg.some((role) =>\n                this.currentUserRolesIds.includes(role),\n            );\n        }\n\n        return this.currentUserRolesIds.includes(arg);\n    }\n\n    get isAuthenticated() {\n        return (\n            Boolean(this.currentUser) &&\n            Boolean(this.currentUser.id)\n        );\n    }\n}"],"mappings":"AAAA,eAAe,MAAMA,iBAAiB,CAAC;EAGnCC,WAAWA,CAACC,WAAW,EAAE;IAAA,KAFzBA,WAAW;IAGP,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;EAEA,IAAIC,mBAAmBA,CAAA,EAAG;IACtB,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE;MACnB,OAAO,EAAE;IACb;IAGA,OAAO,IAAI,CAACA,WAAW,CAACE,KAAK;EACjC;EAEAC,KAAKA,CAACC,UAAU,EAAE;IACd,IAAI,CAACA,UAAU,EAAE;MACb,OAAO,IAAI;IACf;IAEA,OAAO,IAAI,CAACC,eAAe,CAACD,UAAU,CAACE,YAAY,CAAC;EACxD;EAEAD,eAAeA,CAACE,GAAG,EAAE;IACjB,IAAI,CAAC,IAAI,CAACN,mBAAmB,EAAE;MAC3B,OAAO,KAAK;IAChB;IAEA,IAAI,CAACM,GAAG,EAAE;MACN,OAAO,KAAK;IAChB;IAEA,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;MACpB,IAAI,CAACA,GAAG,CAACG,MAAM,EAAE;QACb,OAAO,KAAK;MAChB;MAEA,OAAOH,GAAG,CAACI,IAAI,CAAEC,IAAI,IACjB,IAAI,CAACX,mBAAmB,CAACY,QAAQ,CAACD,IAAI,CAC1C,CAAC;IACL;IAEA,OAAO,IAAI,CAACX,mBAAmB,CAACY,QAAQ,CAACN,GAAG,CAAC;EACjD;EAEA,IAAIO,eAAeA,CAAA,EAAG;IAClB,OACIC,OAAO,CAAC,IAAI,CAACf,WAAW,CAAC,IACzBe,OAAO,CAAC,IAAI,CAACf,WAAW,CAACgB,EAAE,CAAC;EAEpC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}