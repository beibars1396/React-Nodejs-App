{"ast":null,"code":"import authService from \"../../auth/authService\";\nimport { getHistory } from '../../store';\nimport Message from \"../../../view/shared/message\";\nconst DEFAULT_ERROR_MESSAGE = 'errors.defaultErrorMessage';\nfunction selectErrorKeyOrMessage(error) {\n  if (error && error.response && error.response.data) {\n    const data = error.response.data;\n    if (data.error && data.error.message) {\n      return data.error.message;\n    }\n    return String(data);\n  }\n  return error.message || DEFAULT_ERROR_MESSAGE;\n}\nfunction selectErrorMessage(error) {\n  const key = selectErrorKeyOrMessage(error);\n  return key;\n}\nfunction selectErrorCode(error) {\n  if (error && error.response && error.response.status) {\n    return error.response.status;\n  }\n  return 500;\n}\nexport default class Errors {\n  static handle(error) {\n    if (process.env.NODE_ENV !== 'test') {\n      console.error(selectErrorMessage(error));\n      console.error(error);\n    }\n    if (selectErrorCode(error) === 401) {\n      authService.signout();\n      window.location.reload();\n      return;\n    }\n    if (selectErrorCode(error) === 403) {\n      getHistory().push('/403');\n      return;\n    }\n    if ([400, 429].includes(selectErrorCode(error))) {\n      Message.error(selectErrorMessage(error));\n      return;\n    }\n    getHistory().push('/500');\n  }\n  static errorCode(error) {\n    return selectErrorCode(error);\n  }\n  static selectMessage(error) {\n    return selectErrorMessage(error);\n  }\n  static showMessage(error) {\n    Message.error(selectErrorMessage(error));\n  }\n}","map":{"version":3,"names":["authService","getHistory","Message","DEFAULT_ERROR_MESSAGE","selectErrorKeyOrMessage","error","response","data","message","String","selectErrorMessage","key","selectErrorCode","status","Errors","handle","process","env","NODE_ENV","console","signout","window","location","reload","push","includes","errorCode","selectMessage","showMessage"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/shared/error/errors.tsx"],"sourcesContent":["import authService from \"../../auth/authService\";\nimport { getHistory } from '../../store';\nimport Message from \"../../../view/shared/message\";\n\nconst DEFAULT_ERROR_MESSAGE = 'errors.defaultErrorMessage';\n\nfunction selectErrorKeyOrMessage(error: any) {\n    if (error && error.response && error.response.data) {\n        const data = error.response.data;\n    \n        if (data.error && data.error.message) {\n            return data.error.message;\n        }\n    \n        return String(data);\n    }\n  \n    return error.message || DEFAULT_ERROR_MESSAGE;\n}\n  \nfunction selectErrorMessage(error: any) {\n    const key = selectErrorKeyOrMessage(error);\n\n    return key;\n}\n\nfunction selectErrorCode(error: any) {\n    if(error && error.response && error.response.status) {\n        return error.response.status;\n    }\n\n    return 500;\n}\n\nexport default class Errors {\n    static handle(error: any) {\n        if (process.env.NODE_ENV !== 'test') {\n            console.error(selectErrorMessage(error));\n            console.error(error);\n        }\n\n        if (selectErrorCode(error) === 401) {\n            authService.signout();\n            (window as any).location.reload();\n            return;\n        }\n\n        if (selectErrorCode(error) === 403) {\n            getHistory().push('/403');\n            return;\n        }\n\n        if ([400, 429].includes(selectErrorCode(error))) {\n            Message.error(selectErrorMessage(error));\n            return;\n        }\n  \n        getHistory().push('/500');\n    }\n  \n    static errorCode(error: any) {\n        return selectErrorCode(error);\n    }\n  \n    static selectMessage(error: any) {\n        return selectErrorMessage(error);\n    }\n  \n    static showMessage(error: any) {\n        Message.error(selectErrorMessage(error));\n    }\n}\n  "],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,OAAO,MAAM,8BAA8B;AAElD,MAAMC,qBAAqB,GAAG,4BAA4B;AAE1D,SAASC,uBAAuBA,CAACC,KAAU,EAAE;EACzC,IAAIA,KAAK,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,IAAI,EAAE;IAChD,MAAMA,IAAI,GAAGF,KAAK,CAACC,QAAQ,CAACC,IAAI;IAEhC,IAAIA,IAAI,CAACF,KAAK,IAAIE,IAAI,CAACF,KAAK,CAACG,OAAO,EAAE;MAClC,OAAOD,IAAI,CAACF,KAAK,CAACG,OAAO;IAC7B;IAEA,OAAOC,MAAM,CAACF,IAAI,CAAC;EACvB;EAEA,OAAOF,KAAK,CAACG,OAAO,IAAIL,qBAAqB;AACjD;AAEA,SAASO,kBAAkBA,CAACL,KAAU,EAAE;EACpC,MAAMM,GAAG,GAAGP,uBAAuB,CAACC,KAAK,CAAC;EAE1C,OAAOM,GAAG;AACd;AAEA,SAASC,eAAeA,CAACP,KAAU,EAAE;EACjC,IAAGA,KAAK,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACO,MAAM,EAAE;IACjD,OAAOR,KAAK,CAACC,QAAQ,CAACO,MAAM;EAChC;EAEA,OAAO,GAAG;AACd;AAEA,eAAe,MAAMC,MAAM,CAAC;EACxB,OAAOC,MAAMA,CAACV,KAAU,EAAE;IACtB,IAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;MACjCC,OAAO,CAACd,KAAK,CAACK,kBAAkB,CAACL,KAAK,CAAC,CAAC;MACxCc,OAAO,CAACd,KAAK,CAACA,KAAK,CAAC;IACxB;IAEA,IAAIO,eAAe,CAACP,KAAK,CAAC,KAAK,GAAG,EAAE;MAChCL,WAAW,CAACoB,OAAO,CAAC,CAAC;MACpBC,MAAM,CAASC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACjC;IACJ;IAEA,IAAIX,eAAe,CAACP,KAAK,CAAC,KAAK,GAAG,EAAE;MAChCJ,UAAU,CAAC,CAAC,CAACuB,IAAI,CAAC,MAAM,CAAC;MACzB;IACJ;IAEA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACb,eAAe,CAACP,KAAK,CAAC,CAAC,EAAE;MAC7CH,OAAO,CAACG,KAAK,CAACK,kBAAkB,CAACL,KAAK,CAAC,CAAC;MACxC;IACJ;IAEAJ,UAAU,CAAC,CAAC,CAACuB,IAAI,CAAC,MAAM,CAAC;EAC7B;EAEA,OAAOE,SAASA,CAACrB,KAAU,EAAE;IACzB,OAAOO,eAAe,CAACP,KAAK,CAAC;EACjC;EAEA,OAAOsB,aAAaA,CAACtB,KAAU,EAAE;IAC7B,OAAOK,kBAAkB,CAACL,KAAK,CAAC;EACpC;EAEA,OAAOuB,WAAWA,CAACvB,KAAU,EAAE;IAC3BH,OAAO,CAACG,KAAK,CAACK,kBAAkB,CAACL,KAAK,CAAC,CAAC;EAC5C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}