{"ast":null,"code":"import { routerMiddleware } from \"connected-react-router\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport createRootReducer from './reducers';\nimport initializers from \"./initializers\";\nimport { createBrowserHistory } from 'history';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { useDispatch } from \"react-redux\";\nconst history = createBrowserHistory();\nlet store;\nexport function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware, routerMiddleware(history)].filter(Boolean);\n  store = createStore(createRootReducer(history), preloadedState, composeWithDevTools(applyMiddleware(...middlewares)));\n  for (const initializer of initializers) {\n    initializer(store);\n  }\n  return store;\n}\nexport const useAppDispatch = useDispatch;\nexport function getHistory() {\n  return history;\n}\nexport default function getStore() {\n  return store;\n}","map":{"version":3,"names":["routerMiddleware","thunkMiddleware","applyMiddleware","createStore","createRootReducer","initializers","createBrowserHistory","composeWithDevTools","useDispatch","history","store","configureStore","preloadedState","middlewares","filter","Boolean","initializer","useAppDispatch","getHistory","getStore"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/store.tsx"],"sourcesContent":["import { routerMiddleware } from \"connected-react-router\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport createRootReducer from './reducers';\nimport initializers from \"./initializers\";\nimport { createBrowserHistory } from 'history';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { useDispatch } from \"react-redux\";\n\nconst history = createBrowserHistory();\nlet store: any;\n\nexport function configureStore(preloadedState?: any){\n    const middlewares = [\n        thunkMiddleware,\n        routerMiddleware(history)\n    ].filter(Boolean);\n\n    store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeWithDevTools(applyMiddleware(...middlewares))\n    );\n\n    for(const initializer of initializers) {\n        initializer(store);\n    }\n\n    return store;\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch: () => AppDispatch = useDispatch \n\nexport function getHistory() {\n    return history;\n}\n\nexport default function getStore() {\n    return store;\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,OAAOC,eAAe,MAAM,aAAa;AACzC,SAASC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,iBAAiB,MAAM,YAAY;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,OAAO,GAAGH,oBAAoB,CAAC,CAAC;AACtC,IAAII,KAAU;AAEd,OAAO,SAASC,cAAcA,CAACC,cAAoB,EAAC;EAChD,MAAMC,WAAW,GAAG,CAChBZ,eAAe,EACfD,gBAAgB,CAACS,OAAO,CAAC,CAC5B,CAACK,MAAM,CAACC,OAAO,CAAC;EAEjBL,KAAK,GAAGP,WAAW,CACfC,iBAAiB,CAACK,OAAO,CAAC,EAC1BG,cAAc,EACdL,mBAAmB,CAACL,eAAe,CAAC,GAAGW,WAAW,CAAC,CACvD,CAAC;EAED,KAAI,MAAMG,WAAW,IAAIX,YAAY,EAAE;IACnCW,WAAW,CAACN,KAAK,CAAC;EACtB;EAEA,OAAOA,KAAK;AAChB;AAGA,OAAO,MAAMO,cAAiC,GAAGT,WAAW;AAE5D,OAAO,SAASU,UAAUA,CAAA,EAAG;EACzB,OAAOT,OAAO;AAClB;AAEA,eAAe,SAASU,QAAQA,CAAA,EAAG;EAC/B,OAAOT,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}