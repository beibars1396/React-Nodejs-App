{"ast":null,"code":"import authAxios from \"modules/shared/axios/authAxios\";\nexport default class TodolistService {\n  static async update(id, data) {\n    const body = {\n      id,\n      data\n    };\n    const response = await authAxios.put(`/todolist/${id}`, body);\n    return response.data;\n  }\n  static async list(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset\n    };\n    const response = await authAxios.get(`todolist`, {\n      params\n    });\n    return response.data;\n  }\n  static async destroy(ids) {\n    const params = {\n      ids\n    };\n    const response = await authAxios.delete(`/todolist`, {\n      params\n    });\n    return response.data;\n  }\n  static async edit(id, data) {\n    const body = {\n      id,\n      data\n    };\n    const response = await authAxios.put(`/todolist/${id}`, body);\n    return response.data;\n  }\n  static async create(data) {\n    const body = {\n      data\n    };\n    const response = await authAxios.post(`/todolist`, body);\n    return response.data;\n  }\n  static async find(id) {\n    const response = await authAxios.get(`/todolist/${id}`);\n    return response.data;\n  }\n  static async fetchTodolist(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset\n    };\n    const response = await authAxios.get(`/todolist`, {\n      params\n    });\n    return response.data;\n  }\n}","map":{"version":3,"names":["authAxios","TodolistService","update","id","data","body","response","put","list","filter","orderBy","limit","offset","params","get","destroy","ids","delete","edit","create","post","find","fetchTodolist"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/todolist/todolistService.tsx"],"sourcesContent":["import authAxios from \"modules/shared/axios/authAxios\";\n\nexport default class TodolistService {\n    static async update(id, data) {\n        const body = {\n            id, \n            data\n        }\n        const response = await authAxios.put(\n            `/todolist/${id}`,\n            body\n        );\n        \n        return response.data;\n    }\n\n    static async list(filter, orderBy, limit, offset) {\n        const params = {\n            filter,\n            orderBy,\n            limit,\n            offset\n        }\n\n        const response = await authAxios.get(\n            `todolist`, \n            {\n                params\n            }\n        )\n\n        return response.data;\n    }\n\n    static async destroy(ids) {\n        const params = {\n            ids,\n        };\n    \n    \n        const response = await authAxios.delete(\n            `/todolist`,\n            {\n                params,\n            },\n        );\n    \n        return response.data;\n    }\n\n    static async edit(id, data) {\n        const body = {\n            id, \n            data\n        }\n        \n        const response = await authAxios.put(\n            `/todolist/${id}`,\n            body\n        )\n        return response.data;\n    }\n\n    static async create(data) {\n        const body = {\n            data\n        }\n        \n        const response = await authAxios.post(\n            `/todolist`,\n            body\n        )\n        \n        return response.data;\n    }\n\n    static async find(id){\n        const response = await authAxios.get(\n            `/todolist/${id}`\n        );\n        return response.data\n    }\n\n    static async fetchTodolist(filter?, orderBy?, limit?, offset?) {\n        const params = {\n            filter,\n            orderBy,\n            limit,\n            offset,\n        };\n    \n        const response = await authAxios.get(\n            `/todolist`,\n            {\n                params,\n            },\n        );\n    \n        return response.data;\n    }\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gCAAgC;AAEtD,eAAe,MAAMC,eAAe,CAAC;EACjC,aAAaC,MAAMA,CAACC,EAAE,EAAEC,IAAI,EAAE;IAC1B,MAAMC,IAAI,GAAG;MACTF,EAAE;MACFC;IACJ,CAAC;IACD,MAAME,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAC/B,aAAYJ,EAAG,EAAC,EACjBE,IACJ,CAAC;IAED,OAAOC,QAAQ,CAACF,IAAI;EACxB;EAEA,aAAaI,IAAIA,CAACC,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAC9C,MAAMC,MAAM,GAAG;MACXJ,MAAM;MACNC,OAAO;MACPC,KAAK;MACLC;IACJ,CAAC;IAED,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACc,GAAG,CAC/B,UAAS,EACV;MACID;IACJ,CACJ,CAAC;IAED,OAAOP,QAAQ,CAACF,IAAI;EACxB;EAEA,aAAaW,OAAOA,CAACC,GAAG,EAAE;IACtB,MAAMH,MAAM,GAAG;MACXG;IACJ,CAAC;IAGD,MAAMV,QAAQ,GAAG,MAAMN,SAAS,CAACiB,MAAM,CAClC,WAAU,EACX;MACIJ;IACJ,CACJ,CAAC;IAED,OAAOP,QAAQ,CAACF,IAAI;EACxB;EAEA,aAAac,IAAIA,CAACf,EAAE,EAAEC,IAAI,EAAE;IACxB,MAAMC,IAAI,GAAG;MACTF,EAAE;MACFC;IACJ,CAAC;IAED,MAAME,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAC/B,aAAYJ,EAAG,EAAC,EACjBE,IACJ,CAAC;IACD,OAAOC,QAAQ,CAACF,IAAI;EACxB;EAEA,aAAae,MAAMA,CAACf,IAAI,EAAE;IACtB,MAAMC,IAAI,GAAG;MACTD;IACJ,CAAC;IAED,MAAME,QAAQ,GAAG,MAAMN,SAAS,CAACoB,IAAI,CAChC,WAAU,EACXf,IACJ,CAAC;IAED,OAAOC,QAAQ,CAACF,IAAI;EACxB;EAEA,aAAaiB,IAAIA,CAAClB,EAAE,EAAC;IACjB,MAAMG,QAAQ,GAAG,MAAMN,SAAS,CAACc,GAAG,CAC/B,aAAYX,EAAG,EACpB,CAAC;IACD,OAAOG,QAAQ,CAACF,IAAI;EACxB;EAEA,aAAakB,aAAaA,CAACb,MAAO,EAAEC,OAAQ,EAAEC,KAAM,EAAEC,MAAO,EAAE;IAC3D,MAAMC,MAAM,GAAG;MACXJ,MAAM;MACNC,OAAO;MACPC,KAAK;MACLC;IACJ,CAAC;IAED,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACc,GAAG,CAC/B,WAAU,EACX;MACID;IACJ,CACJ,CAAC;IAED,OAAOP,QAAQ,CAACF,IAAI;EACxB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}