{"ast":null,"code":"import { createSelector } from 'reselect';\nimport authSelectors from \"modules/auth/authSelectors\";\nimport PermissionChecker from \"modules/auth/permissionChecker\";\nimport Permissions from \"security/permissions\";\nconst selectRaw = state => state.todolist;\nconst selectLimit = createSelector([selectRaw], raw => {\n  const pagination = raw.pagination;\n  return pagination.pageSize;\n});\nconst selectCount = createSelector([selectRaw], raw => raw.count);\nconst selectHasRows = createSelector([selectCount], count => count > 0);\nconst selectOffset = createSelector([selectRaw], raw => {\n  const pagination = raw.pagination;\n  if (!pagination || !pagination.pageSize) {\n    return 0;\n  }\n  const current = pagination.current || 1;\n  return (current - 1) * pagination.pageSize;\n});\nconst selectOrderBy = createSelector([selectRaw], raw => {\n  const sorter = raw.sorter;\n  if (!sorter) {\n    return null;\n  }\n  if (!sorter.field) {\n    return null;\n  }\n  let direction = sorter.order === 'desc' ? 'DESC' : 'ASC';\n  return `${sorter.field}_${direction}`;\n});\nconst selectRawFilter = createSelector([selectRaw], raw => {\n  return raw.rawFilter;\n});\nconst selectLoading = createSelector([selectRaw], raw => raw.loading);\nconst selectRows = createSelector([selectRaw], raw => raw.rows);\nconst selectSelectedKeys = createSelector([selectRaw], raw => {\n  return raw.selectedKeys;\n});\nconst selectFilter = createSelector([selectRaw], raw => {\n  return raw.filter;\n});\nconst selectPagination = createSelector([selectRaw, selectCount], (raw, count) => {\n  return {\n    ...raw.pagination,\n    total: count\n  };\n});\nconst selectIsAllSelected = createSelector([selectRows, selectSelectedKeys], (rows, selectedKeys) => {\n  return rows.length === selectedKeys.length;\n});\nconst selectExportLoading = createSelector([selectRaw], raw => raw.exportLoading);\nconst selectSelectedRows = createSelector([selectRaw, selectRows], (raw, rows) => {\n  return rows.filter(row => raw.selectedKeys.includes(row.id));\n});\nconst selectPermissionToEdit = createSelector([authSelectors.selectCurrentUser], currentUser => new PermissionChecker(currentUser).match(Permissions.values.adminPermissions));\nconst selectPermissionToDestroy = createSelector([authSelectors.selectCurrentUser], currentUser => new PermissionChecker(currentUser).match(Permissions.values.adminPermissions));\nconst todolistSelectors = {\n  selectFilter,\n  selectSelectedKeys,\n  selectExportLoading,\n  selectRows,\n  selectSelectedRows,\n  selectLoading,\n  selectIsAllSelected,\n  selectHasRows,\n  selectPagination,\n  selectRawFilter,\n  selectOffset,\n  selectOrderBy,\n  selectLimit,\n  selectPermissionToEdit,\n  selectPermissionToDestroy\n};\nexport default todolistSelectors;","map":{"version":3,"names":["createSelector","authSelectors","PermissionChecker","Permissions","selectRaw","state","todolist","selectLimit","raw","pagination","pageSize","selectCount","count","selectHasRows","selectOffset","current","selectOrderBy","sorter","field","direction","order","selectRawFilter","rawFilter","selectLoading","loading","selectRows","rows","selectSelectedKeys","selectedKeys","selectFilter","filter","selectPagination","total","selectIsAllSelected","length","selectExportLoading","exportLoading","selectSelectedRows","row","includes","id","selectPermissionToEdit","selectCurrentUser","currentUser","match","values","adminPermissions","selectPermissionToDestroy","todolistSelectors"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/todolist/todolistSelectors.tsx"],"sourcesContent":["import { createSelector } from 'reselect';\nimport authSelectors from \"modules/auth/authSelectors\";\nimport PermissionChecker from \"modules/auth/permissionChecker\";\nimport Permissions from \"security/permissions\";\n\nconst selectRaw = (state) => state.todolist;\n\nconst selectLimit = createSelector([selectRaw], (raw) => {\n    const pagination = raw.pagination;\n    return pagination.pageSize;\n});\n\nconst selectCount = createSelector(\n    [selectRaw],\n    (raw) => raw.count,\n);\n\nconst selectHasRows = createSelector(\n    [selectCount],\n    (count) => count > 0,\n);\n\nconst selectOffset = createSelector([selectRaw], (raw) => {\n    const pagination = raw.pagination;\n\n    if (!pagination || !pagination.pageSize) {\n      return 0;\n    }\n\n    const current = pagination.current || 1;\n\n    return (current - 1) * pagination.pageSize;\n});\n\nconst selectOrderBy = createSelector([selectRaw], (raw) => {\n    const sorter = raw.sorter;\n\n    if (!sorter) {\n      return null;\n    }\n\n    if (!sorter.field) {\n      return null;\n    }\n\n    let direction = sorter.order === 'desc' ? 'DESC' : 'ASC';\n\n    return `${sorter.field}_${direction}`;\n});\n\nconst selectRawFilter = createSelector(\n    [selectRaw],\n    (raw) => {\n        return raw.rawFilter;\n    },\n);\n\nconst selectLoading = createSelector(\n    [selectRaw],\n    (raw) => raw.loading,\n);\n\nconst selectRows = createSelector(\n    [selectRaw],\n    (raw) => raw.rows,\n);\n\nconst selectSelectedKeys = createSelector(\n    [selectRaw],\n    (raw) => {\n        return raw.selectedKeys;\n    },\n);\n\nconst selectFilter = createSelector([selectRaw], (raw) => {\n    return raw.filter;\n});\n\nconst selectPagination = createSelector(\n    [selectRaw, selectCount],\n    (raw, count) => {\n        return {\n            ...raw.pagination,\n            total: count,\n        };\n    },\n);\n\nconst selectIsAllSelected = createSelector(\n    [selectRows, selectSelectedKeys],\n    (rows, selectedKeys) => {\n        return rows.length === selectedKeys.length;\n    },\n);\n\nconst selectExportLoading = createSelector(\n    [selectRaw],\n    (raw) => raw.exportLoading,\n);\n\nconst selectSelectedRows = createSelector(\n    [selectRaw, selectRows],\n    (raw, rows) => {\n        return rows.filter((row) =>\n            raw.selectedKeys.includes(row.id),\n        );\n    },\n);\n\nconst selectPermissionToEdit = createSelector(\n    [\n        authSelectors.selectCurrentUser\n    ],\n    (currentUser) => new PermissionChecker(currentUser).match(\n        Permissions.values.adminPermissions\n    )\n);\n\nconst selectPermissionToDestroy = createSelector(\n    [\n        authSelectors.selectCurrentUser\n    ],\n    (currentUser) => new PermissionChecker(currentUser).match(\n        Permissions.values.adminPermissions\n    )\n);\n\nconst todolistSelectors = {\n    selectFilter,\n    selectSelectedKeys,\n    selectExportLoading,\n    selectRows,\n    selectSelectedRows,\n    selectLoading,\n    selectIsAllSelected,\n    selectHasRows,\n    selectPagination,\n    selectRawFilter,\n    selectOffset,\n    selectOrderBy,\n    selectLimit,\n    selectPermissionToEdit,\n    selectPermissionToDestroy\n}\n\nexport default todolistSelectors; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}