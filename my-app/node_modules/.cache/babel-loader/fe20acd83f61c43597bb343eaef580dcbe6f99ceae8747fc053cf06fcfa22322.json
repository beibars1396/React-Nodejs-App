{"ast":null,"code":"import { AuthToken } from \"../../auth/authToken\";\n// import config from \"../../../config\";\nimport Axios from 'axios';\nimport moment from \"moment\";\nvar Qs = require('qs');\nconst authAxios = Axios.create({\n  // baseURL: config.backendUrl,\n  // baseURL: 'http://192.168.1.37:8080/api', \n  // <-- toChange\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {\n      arrayFormat: 'brackets',\n      filter: (prefix, value) => {\n        if (moment.isMoment(value) || value instanceof Date) {\n          return value.toISOString();\n        }\n        return value;\n      }\n    });\n  }\n});\nauthAxios.interceptors.request.use(async function (options) {\n  const token = AuthToken.get();\n  if (token) {\n    options.headers['Authorization'] = `Bearer ${token}`;\n  }\n  options.headers['Accept-Language'] = 'ru';\n  return options;\n}, function (error) {\n  console.log('Request error:', error);\n  return Promise.reject(error);\n});\nexport default authAxios;","map":{"version":3,"names":["AuthToken","Axios","moment","Qs","require","authAxios","create","paramsSerializer","params","stringify","arrayFormat","filter","prefix","value","isMoment","Date","toISOString","interceptors","request","use","options","token","get","headers","error","console","log","Promise","reject"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/modules/shared/axios/authAxios.tsx"],"sourcesContent":["import { AuthToken } from \"../../auth/authToken\";\n// import config from \"../../../config\";\nimport Axios from 'axios';\nimport moment from \"moment\";\n\ndeclare var require: any\n\nvar Qs = require('qs');\n\nconst authAxios = Axios.create({\n    // baseURL: config.backendUrl,\n    // baseURL: 'http://192.168.1.37:8080/api', \n    // <-- toChange\n    paramsSerializer: function (params) {\n\n        return Qs.stringify(params, {\n            arrayFormat: 'brackets',\n            filter: (prefix, value) => {\n                if(\n                    moment.isMoment(value) || value instanceof Date\n                ) {\n                    return value.toISOString();\n                }\n\n                return value;\n            }\n        })\n    }\n});\n\nauthAxios.interceptors.request.use(\n    async function (options) {\n        const token = AuthToken.get();\n        \n        if(token)  {\n            options.headers['Authorization'] = `Bearer ${token}`;\n        }\n\n        options.headers['Accept-Language'] = 'ru'\n\n        return options\n    }, function (error) {\n        console.log('Request error:', error);\n        return Promise.reject(error);\n    }\n)\n\nexport default authAxios;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAChD;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAI3B,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEtB,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3B;EACA;EACA;EACAC,gBAAgB,EAAE,SAAAA,CAAUC,MAAM,EAAE;IAEhC,OAAOL,EAAE,CAACM,SAAS,CAACD,MAAM,EAAE;MACxBE,WAAW,EAAE,UAAU;MACvBC,MAAM,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAK;QACvB,IACIX,MAAM,CAACY,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,YAAYE,IAAI,EACjD;UACE,OAAOF,KAAK,CAACG,WAAW,CAAC,CAAC;QAC9B;QAEA,OAAOH,KAAK;MAChB;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEFR,SAAS,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,gBAAgBC,OAAO,EAAE;EACrB,MAAMC,KAAK,GAAGrB,SAAS,CAACsB,GAAG,CAAC,CAAC;EAE7B,IAAGD,KAAK,EAAG;IACPD,OAAO,CAACG,OAAO,CAAC,eAAe,CAAC,GAAI,UAASF,KAAM,EAAC;EACxD;EAEAD,OAAO,CAACG,OAAO,CAAC,iBAAiB,CAAC,GAAG,IAAI;EAEzC,OAAOH,OAAO;AAClB,CAAC,EAAE,UAAUI,KAAK,EAAE;EAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;EACpC,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAenB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}