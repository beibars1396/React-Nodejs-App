{"ast":null,"code":"var _jsxFileName = \"/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/view/shared/routes/PublicRoute.tsx\";\nimport { Route, Navigate } from 'react-router-dom';\nimport PermissionChecker from '../../../modules/auth/permissionChecker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PublicRoute(_ref) {\n  let {\n    component: Component,\n    currentTenant,\n    currentUser,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      const permissionChecker = new PermissionChecker(currentUser, currentTenant);\n      if (permissionChecker.isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 28\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["Route","Navigate","PermissionChecker","jsxDEV","_jsxDEV","PublicRoute","_ref","component","Component","currentTenant","currentUser","rest","render","props","permissionChecker","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ushbaybeibars/Documents/React-Nodejs-App/my-app/src/view/shared/routes/PublicRoute.tsx"],"sourcesContent":["import {Route, Navigate} from 'react-router-dom'\nimport PermissionChecker from '../../../modules/auth/permissionChecker'\n\nexport default function PublicRoute({\n    component: Component,\n    currentTenant,\n    currentUser,\n    ...rest\n}) {\n    return (\n        <Route\n            {...rest}\n            render={(props)=>{\n                const permissionChecker = new PermissionChecker(currentUser, currentTenant);\n                if (permissionChecker.isAuthenticated){\n                    return <Navigate to=\"/\" />\n                }\n\n                return <Component {...props} />\n            }}\n        />\n    )\n}"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,kBAAkB;AAChD,OAAOC,iBAAiB,MAAM,yCAAyC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvE,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAKhC;EAAA,IALiC;IAChCC,SAAS,EAAEC,SAAS;IACpBC,aAAa;IACbC,WAAW;IACX,GAAGC;EACP,CAAC,GAAAL,IAAA;EACG,oBACIF,OAAA,CAACJ,KAAK;IAAA,GACEW,IAAI;IACRC,MAAM,EAAGC,KAAK,IAAG;MACb,MAAMC,iBAAiB,GAAG,IAAIZ,iBAAiB,CAACQ,WAAW,EAAED,aAAa,CAAC;MAC3E,IAAIK,iBAAiB,CAACC,eAAe,EAAC;QAClC,oBAAOX,OAAA,CAACH,QAAQ;UAACe,EAAE,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC9B;MAEA,oBAAOhB,OAAA,CAACI,SAAS;QAAA,GAAKK;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACnC;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACC,EAAA,GAnBuBhB,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}